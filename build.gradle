plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.6.0'
}


group = "com.example"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = '17'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}


repositories {
    mavenCentral()
}

ext {
}

dependencies {



    // springBoot version
    def springframeworkBoot = "3.0.1"

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'com.google.code.gson:gson'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.4'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'


    //batch
//    implementation 'org.springframework.boot:spring-boot-starter-batch'
//    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'commons-net:commons-net:3.6'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //Kafka
    implementation("org.springframework.kafka:spring-kafka:$springframeworkBoot")
    testImplementation("org.springframework.kafka:spring-kafka-test:$springframeworkBoot")

    //openSearch
    implementation 'org.opensearch.client:spring-data-opensearch-starter:1.2.0'
    //for openSearchTest
    implementation 'org.opensearch.client:spring-data-opensearch-test-autoconfigure:1.2.0'

}

tasks.named('test') {
    useJUnitPlatform()
}